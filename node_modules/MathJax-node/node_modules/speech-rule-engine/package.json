{
  "name": "speech-rule-engine",
  "version": "0.2.5",
  "description": "A standalone speech rule engine for XML structures, based on the original engine from ChromeVox.",
  "directories": {
    "test": "tests"
  },
  "scripts": {
    "test": "node tests/mathml_store_test.js",
    "prepublish": "make clean; make publish"
  },
  "maintainers": [
    {
      "name": "Volker Sorge",
      "email": "Volker.Sorge@gmail.com",
      "url": "http://www.cs.bham.ac.uk/~vxs"
    }
  ],
  "bugs": {
    "url": "https://github.com/zorkow/speech-rule-engine/issues",
    "email": "volker.sorge@gmail.com"
  },
  "license": {
    "type": "Apache",
    "url": "http://github.com/mathjax/MathJax-node/blob/master/LICENSE"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/zorkow/speech-rule-engine"
  },
  "keywords": [
    "screen-reader",
    "xml",
    "a11y"
  ],
  "homepage": "https://github.com/zorkow/speech-rule-engine",
  "dependencies": {
    "commander": "*",
    "xmldom": "*",
    "xpath": "*"
  },
  "files": [
    "index.js",
    "LICENSE",
    "README.md",
    "lib/"
  ],
  "main": "index.js",
  "readme": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n\n<head>\n<title>README.html</title>\n\n</head>\n\n<body>\n\n<h1 id=\"speech-rule-engine\">speech-rule-engine</h1>\n<p>NodeJS version of the ChromeVox speech rule engine. Forked from ChromeVox release 1.31.0</p>\n<p>There are two ways of using this engine. Either as a package via npm or by building it as a standalone tool. The former is the easiest way to use the speech rule engine via its Api and is the preferred option if you just want to include it in your project. The latter is useful if you want to use the speech rule engine in batch mode or interactivley to add your own code.</p>\n<h2 id=\"node-module\">Node Module</h2>\n<p>Install as a node module using npm:</p>\n<pre><code> npm install speech-rule-engine</code></pre>\n<p>Then import into a running node or a source file using require:</p>\n<pre><code> require(&#39;speech-rule-engine&#39;);\n </code></pre>\n<h3 id=\"api\">API</h3>\n<p>Current API functions are</p>\n<pre><code> processExpression(mathml); </code></pre>\n<p>Takes a string containing a MathML expression and returns the corresponding speech string.</p>\n<pre><code> processFile(input, output);</code></pre>\n<p>Takes an input file containing a MathML expression and writes the corresponding speech string to the output file.</p>\n<pre><code> setupEngine(options);</code></pre>\n<p>Takes an object of option/value pairs to parameterise the Speech Rule Engine. Valid options are:</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th align=\"left\">Option</th>\n<th align=\"left\">Value</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td align=\"left\"><em>domain</em></td>\n<td align=\"left\">Domain or subject area of speech rules (e.g., mathspeak, physics).</td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\"><em>style</em></td>\n<td align=\"left\">Style of speech rules (e.g., brief).</td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\"><em>semantics</em></td>\n<td align=\"left\">Boolean flag to swich on semantic interpretation.</td>\n</tr>\n</tbody>\n</table>\n<p>Observe that some speech rule domains only make sense with semantics switched on or off and that not every domain implements every style. See also the description of the command line parameters in the next section for more details.</p>\n<h2 id=\"standalone-engine\">Standalone Engine</h2>\n<p>Node dependencies you have to install:</p>\n<pre><code> closure\n closurecompiler\n closure-library\n xmldom\n xpath\n commander</code></pre>\n<p>Using npm run</p>\n<pre><code> npm install closure closurecompiler closure-library xmldom xpath commander</code></pre>\n<p>In version 1.43 of the closure library there is a mistake in the file</p>\n<pre><code>closure-library/closure/bin/build/jscompiler.py </code></pre>\n<p>You might need to change</p>\n<pre><code># Attempt 32-bit mode if we&#39;re &lt;= Java 1.7\nif java_version &gt;= 1.7:\n  args += [&#39;-d32&#39;]</code></pre>\n<p>to</p>\n<pre><code># Attempt 32-bit mode if we&#39;re &lt;= Java 1.7\nif java_version &lt;= 1.7:\n  args += [&#39;-d32&#39;]</code></pre>\n<h3 id=\"build\">Build</h3>\n<p>Depending on your setup you might need to adapt the NODEJS and NODE_MODULES variable in the Makefile. Then simply run</p>\n<pre><code>make</code></pre>\n<h3 id=\"run-on-command-line\">Run on command line</h3>\n<pre><code>bin/sre -i infile -o outfile</code></pre>\n<p>As an example run</p>\n<pre><code>bin/sre -i samples/sample1.xml -o sample1.txt</code></pre>\n<h3 id=\"run-interactively\">Run interactively</h3>\n<p>Import into a running node process</p>\n<pre><code>require(&#39;./lib/sre4node.js&#39;);</code></pre>\n<p>Note, that this will import the full functionality of the speech rule engine in the sre namespace and of the closure library in the goog namespace.</p>\n<h3 id=\"command-line-options\">Command Line Options</h3>\n<p>The following is a list of command line options for the speech rule engine.</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th align=\"left\">Short</th>\n<th align=\"left\">Long</th>\n<th align=\"left\">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td align=\"left\">-i</td>\n<td align=\"left\">--input [name]</td>\n<td align=\"left\">Input file [name]</td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\">-o</td>\n<td align=\"left\">--output [name]</td>\n<td align=\"left\">Output file [name].</td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n<td align=\"left\">If not given output is printed to stdout.</td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\">-d</td>\n<td align=\"left\">--domain [name]</td>\n<td align=\"left\">Domain or subject area [name].</td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n<td align=\"left\">This refers to a particular subject type of speech rules or subject area rules are defined for (e.g., mathspeak, physics).</td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n<td align=\"left\">If no domain parameter is provided, domain default is used.</td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\">-t</td>\n<td align=\"left\">--style [name]</td>\n<td align=\"left\">Speech style [name].</td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n<td align=\"left\">Selects a particular speech style (e.g., brief).</td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n<td align=\"left\">If no style parameter is provided, style default is used.</td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\">-s</td>\n<td align=\"left\">--semantics</td>\n<td align=\"left\">Switch on semantics interpretation.</td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n<td align=\"left\">Note, that some speech rule domains only make sense with semantics switched on or off.</td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\">-e</td>\n<td align=\"left\">--enumerate</td>\n<td align=\"left\">Enumerates all available domains and styles.</td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n<td align=\"left\">Note that not every style is implemented in every domain.</td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\">-v</td>\n<td align=\"left\">--verbose</td>\n<td align=\"left\">Verbose mode. Print additional information, useful for debugging.</td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\">-l</td>\n<td align=\"left\">--log [name]</td>\n<td align=\"left\">Log file [name]. Verbose output is redirected to this file.</td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n<td align=\"left\">If not given verbose output is printed to stdout.</td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\">-h</td>\n<td align=\"left\">--help</td>\n<td align=\"left\">output usage information</td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\">-V</td>\n<td align=\"left\">--version</td>\n<td align=\"left\">output the version number</td>\n</tr>\n</tbody>\n</table>\n\n</body>\n</html>\n",
  "readmeFilename": "README.html",
  "_id": "speech-rule-engine@0.2.5",
  "dist": {
    "shasum": "6ff85c5c12fb7a2599f08c12fa218b8eb54a19b2"
  },
  "_from": "speech-rule-engine@*",
  "_resolved": "https://registry.npmjs.org/speech-rule-engine/-/speech-rule-engine-0.2.5.tgz"
}
