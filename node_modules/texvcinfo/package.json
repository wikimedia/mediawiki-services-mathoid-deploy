{
  "name": "texvcinfo",
  "version": "0.3.3",
  "description": "Extracts information from texvc code.",
  "main": "lib/index.js",
  "scripts": {
    "test": "jshint . && mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/physikerwelt/texvcinfo"
  },
  "keywords": [
    "tex",
    "wikitext",
    "mediawiki",
    "texvc",
    "tokens",
    "identifier"
  ],
  "license": "GPLv2",
  "bugs": {
    "url": "https://github.com/physikerwelt/texvcinfo/issues"
  },
  "dependencies": {
    "commander": "~2.3.0",
    "texvcjs": "git+https://github.com/wikimedia/texvcjs"
  },
  "devDependencies": {
    "jshint": "~2.5.2",
    "mocha": "~2.0.1"
  },
  "bin": {
    "texvcjs": "./bin/texvcinfo"
  },
  "readme": "# texvcinfo\n[![npm version](https://badge.fury.io/js/texvcinfo.svg)](http://badge.fury.io/js/texvcinfo)\n\n[![Build Status][1]][2]\n\nPrints the texvvc tokens identified by texvcjs.\n\n## Installation\n\nNode version 0.10 are tested to work.\n\nInstall the node package dependencies with:\n```\nnpm install\n```\nEnsure everything works:\n```\nnpm test\n```\n\n## Usage\n\n```\n  Usage: texvcinfo [options] <tex input>\n\n  Options:\n\n    -h, --help             output usage information\n    -V, --version          output the version number\n    -v, --verbose          Show verbose error information\n    -D, --debug            Show stack trace on failure.\n    -c, --compact          Do not pretty print output.\n    -f, --flat             Flattens the tree for elements with only one child\n    -o, --output [format]  Output the info in a specific format. Available options are:\n    \"list\": prints all tokens as list\n    \"tree\": prints the texvc AST\n    \"json\": a json object that can be visualized using d3\n    \"identifier\": prints TeX code for all identifiers\n    \"all\": is a combination of list, tree and identifier\n    \"feedback\": returns data to generate user feedback in a ui\n```\n\n## Visuals\nTo see the tree structure you can output the result to (vis/data.json).\nIf you want to see the texvc parse tree of the texvc expression $\\frac12$ run\n```\n./bin/texvcinfo -j \\\\frac12 > ./vis/data.json\n```\n.\nIn the (/vis/index.html) is a 90° rotated version of the interactive Reingold–Tilford tree from\nhttp://bl.ocks.org/mbostock/4339083, that displays (vis/data.json).\n\n##Error codes\nStatus is one character:\n\n- \"+\" : success! result is in 'output'\n- \"E\" : Lexer exception raised\n- \"F\" : TeX function not recognized\n- \"S\" : Parsing error\n- \"-\" : Generic/Default failure code. Might be an invalid argument, output file already exist, a problem with an external command ...\n\n## License\n\nCopyright (c) 2015 Moritz Schubotz, C. Scott Ananian\n\nLicensed under GPLv2.\n\n\n[1]: https://travis-ci.org/physikerwelt/texvcinfo.svg\n[2]: https://travis-ci.org/physikerwelt/texvcinfo\n",
  "readmeFilename": "README.md",
  "_id": "texvcinfo@0.3.3",
  "dist": {
    "shasum": "5f82440294f1aa904af9833d819650f6349ecaee"
  },
  "_from": "texvcinfo@^0.3.3",
  "_resolved": "https://registry.npmjs.org/texvcinfo/-/texvcinfo-0.3.3.tgz"
}
