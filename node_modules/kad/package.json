{
  "_args": [
    [
      {
        "raw": "kad@git+https://github.com/gwicke/kad.git#master",
        "scope": null,
        "escapedName": "kad",
        "name": "kad",
        "rawSpec": "git+https://github.com/gwicke/kad.git#master",
        "spec": "git+https://github.com/gwicke/kad.git#master",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:gwicke/kad.git#master",
          "sshUrl": "git+ssh://git@github.com/gwicke/kad.git#master",
          "httpsUrl": "git+https://github.com/gwicke/kad.git#master",
          "gitUrl": "git://github.com/gwicke/kad.git#master",
          "shortcut": "github:gwicke/kad#master",
          "directUrl": "https://raw.githubusercontent.com/gwicke/kad/master/package.json"
        }
      },
      "/opt/service/node_modules/limitation"
    ]
  ],
  "_from": "git+https://github.com/gwicke/kad.git#master",
  "_id": "kad@1.3.6",
  "_inCache": true,
  "_location": "/kad",
  "_phantomChildren": {},
  "_requested": {
    "raw": "kad@git+https://github.com/gwicke/kad.git#master",
    "scope": null,
    "escapedName": "kad",
    "name": "kad",
    "rawSpec": "git+https://github.com/gwicke/kad.git#master",
    "spec": "git+https://github.com/gwicke/kad.git#master",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:gwicke/kad.git#master",
      "sshUrl": "git+ssh://git@github.com/gwicke/kad.git#master",
      "httpsUrl": "git+https://github.com/gwicke/kad.git#master",
      "gitUrl": "git://github.com/gwicke/kad.git#master",
      "shortcut": "github:gwicke/kad#master",
      "directUrl": "https://raw.githubusercontent.com/gwicke/kad/master/package.json"
    }
  },
  "_requiredBy": [
    "/limitation"
  ],
  "_resolved": "git+https://github.com/gwicke/kad.git#936c91652d757ea6f9dd30e44698afb0daaa1d17",
  "_shasum": "fd485a722eebc8eff5c710707c09176fdad47661",
  "_shrinkwrap": null,
  "_spec": "kad@git+https://github.com/gwicke/kad.git#master",
  "_where": "/opt/service/node_modules/limitation",
  "author": {
    "name": "Gordon Hall",
    "email": "gordon@gordonwritescode.com"
  },
  "bugs": {
    "url": "https://github.com/kadtools/kad/issues"
  },
  "contributors": [
    {
      "name": "omphalos",
      "url": "https://github.com/omphalos"
    }
  ],
  "dependencies": {
    "async": "^0.9.0",
    "clarinet": "^0.11.0",
    "colors": "^1.0.3",
    "hat": "0.0.3",
    "kad-fs": "0.0.4",
    "kad-localstorage": "0.0.7",
    "kad-memstore": "0.0.1",
    "lodash": "^3.6.0",
    "merge": "^1.2.0",
    "ms": "^0.7.0",
    "msgpack5": "^3.3.0"
  },
  "description": "implementation of the kademlia dht for node",
  "devDependencies": {
    "browserify": "^11.1.0",
    "chai": "^2.2.0",
    "coveralls": "^2.11.2",
    "faker": "^2.1.2",
    "istanbul": "^0.3.13",
    "jsdoc": "^3.4.0",
    "jshint": "2.8.0",
    "minami": "^1.1.1",
    "mocha": "^2.2.4",
    "proxyquire": "^1.7.3",
    "sinon": "^1.14.1"
  },
  "directories": {
    "test": "test",
    "lib": "lib",
    "doc": "doc",
    "example": "example"
  },
  "gitHead": "936c91652d757ea6f9dd30e44698afb0daaa1d17",
  "homepage": "https://github.com/kadtools/kad#readme",
  "keywords": [
    "dht",
    "kademlia",
    "p2p"
  ],
  "license": "GPL-3.0",
  "main": "index.js",
  "name": "kad",
  "optionalDependencies": {},
  "readme": "![Kad](https://avatars1.githubusercontent.com/u/16706596?v=3&s=200)\n===================================================================\n\n[![Build Status](https://img.shields.io/travis/kadtools/kad.svg?style=flat-square)](https://travis-ci.org/kadtools/kad)\n[![Coverage Status](https://img.shields.io/coveralls/kadtools/kad.svg?style=flat-square)](https://coveralls.io/r/kadtools/kad)\n[![NPM](https://img.shields.io/npm/v/kad.svg?style=flat-square)](https://www.npmjs.com/package/kad)\n\nExtensible implementation of the\n[Kademlia](http://www.scs.stanford.edu/~dm/home/papers/kpos.pdf) distributed\nhash table for Node.js and the browser.\n\n## Quick Start\n\n**For complete documentation on using and extending Kad,\n[read the documentation](http://kadtools.github.io).**\n\n```bash\nnpm install kad\n```\n\nCreate your node, plug in your storage adapter, join the network, and party!\n\n```js\nvar kad = require('kad');\n\nvar seed = {\n  address: '127.0.0.1',\n  port: 1338\n};\n\nvar dht = new kad.Node({\n  transport: kad.transports.UDP(kad.contacts.AddressPortContact({\n    address: '127.0.0.1',\n    port: 1337\n  })),\n  storage: kad.storage.FS('path/to/datadir')\n});\n\ndht.connect(seed, function(err) {\n  // dht.get(key, callback);\n  // dht.put(key, value, callback);\n});\n```\n\nYou can build Kad for the browser by running:\n\n```\nnpm run build\n```\n\n> This will output to `dist/kad.browser.js` and will bind to `window` when\n> loaded in your web application.\n\nYou can run a network simulation locally using the included simulator. This\nwill create `n` nodes (as you define) and connect them to each other, sending\n`STORE` messages on an interval and printing information to the console.\n\n```bash\n# use the default of 6 nodes\nnpm run simulation\n# specify as many nodes as you like\nnpm run simulation 128\n```\n\n## Transports\n\nKad ships with support for UDP, TCP, and HTTP transports. To explicitly define\nthe transport to use, set the `transport` option to the appropriate value. See\nthe documentation on {@link RPC} and {@link Contact} for more information.\n\n```js\nvar dht = new kademlia.Node({\n  // ...\n  transport: kademlia.transports.TCP(contact, options)\n});\n```\n\nIf you would like to author your own transport adapter, see\n[kad-transport-boilerplate](https://github.com/kadtools/kad-transport-boilerplate).\n\n### Community Transport Adapters\n\n* [WebRTC](https://github.com/kadtools/kad-webrtc)\n\n## Persistence\n\nKad does not make assumptions about how your nodes will store their data,\ninstead relying on you to implement a storage adapter of your choice. This is\nas simple as providing `get(key, callback)`, `put(key, value, callback)`,\n`del(key, callback)`, and `createReadStream()` methods.\n\nThis works well with [levelup](https://github.com/rvagg/node-levelup), but you\ncould conceivably implement any storage layer you like provided you expose the\ninterface described above. Some adapters have already been contributed by the\ncommunity, listed below.\n\n### Community Storage Adapters\n\n* [Local Storage](https://github.com/kadtools/kad-localstorage)\n* [MongoDB](https://github.com/kadtools/kad-mongo)\n* [File System](https://github.com/kadtools/kad-fs)\n\n## Extensions\n\n### Sybil/Spartacus Mitigation\n\nYou can use [kad-spartacus](https://github.com/kadtools/kad-spartacus)\nto mitigate 2 types of attacks to which a Kademlia DHT may be vulnerable: the\nSybil attack and it's variant, Spartacus.\n\n[Read More →](https://github.com/kadtools/kad-spartacus/blob/master/README.md)\n\n### NAT Traversal\n\nYou can use [kad-traverse](https://github.com/kadtools/kad-traverse)\nto ensure your nodes are able to communicate when behind a NAT or firewall. The\nextension will use different strategies based on the network configuration.\n\n[Read More →](https://github.com/kadtools/kad-traverse/blob/master/README.md)\n\n### Performance Monitoring\n\nYou can use [kad-telemetry](https://github.com/kadtools/kad-telemetry) to track\nthe performance of your peers and extend the default routing algorithm to\nprioritize the selection of nodes with a higher score.\n\n[Read More →](https://github.com/kadtools/kad-telemetry/blob/master/README.md)\n\n### Publish & Subscribe\n\nYou can use [kad-quasar](https://github.com/kadtools/kad-quasar) to extend kad\nwith support for *probabilistic*, topic-based publish/subscribe capabilities.\n\n[Read More →](https://github.com/kadtools/kad-quasar/blob/master/README.md)\n\n## License\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kadtools/kad.git"
  },
  "scripts": {
    "build": "browserify index.js -s kad -o dist/kad.browser.js",
    "coverage": "istanbul cover -x 'lib/logger.js' ./node_modules/.bin/_mocha -- --recursive",
    "linter": "jshint --config .jshintrc ./index.js ./lib ./test",
    "makedoc": "jsdoc index.js lib -r -p -R README.md -u doc -c .jsdoc.json --verbose -d ../kadtools.github.io",
    "simulation": "node script/simulation.js",
    "test": "npm run testsuite && npm run linter",
    "testsuite": "mocha test/** --recursive"
  },
  "version": "1.3.6"
}
